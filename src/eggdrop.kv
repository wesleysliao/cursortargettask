#:kivy 1.9.1

<P1Cursor@Cursor>:
    size_hint: 0.1, None
    height: self.width
    canvas:
        Color:
            rgba: (1,0,0,1)
        Ellipse:
            size: self.size
            pos: ((self.x-(self.width/2)),(self.y-(self.height/2)))
        Rectangle:
            size: ((self.width/2), 1080)
            pos: ((self.x-(self.width/4)),(self.y-1080))

<P2Cursor@Cursor>:
    size_hint: 0.1, None
    height: self.width
    canvas:
        Color:
            rgba: (0,0,1,1)
        Ellipse:
            size: self.size
            pos: ((self.x-(self.width/2)),(self.y-(self.height/2)))
        Rectangle:
            size: ((self.width/2), 1080)
            pos: ((self.x-(self.width/4)),(self.y))

<SOSTarget>:
    size_hint: 0.15, None
    height: self.width*2
    canvas:
        Color:
            rgba: (1,1,1,0.1) if not self.active else ((0.5,0,0.8,1) if self.hit else (0.2,0,0.5,1)) 
        Rectangle:
            size: self.size
            pos: (self.x-(self.width/2), self.y-(self.height/2))

<EggDrop>:
    cursor: p1_cursor_id
    p2_cursor: p2_cursor_id
    targets: targets_id

    cursor_diff: self.p2_cursor.y -  self.cursor.y
    cursor_center: self.cursor.y + (self.cursor_diff/2)

    canvas:
        Color:
            rgba:(0,0,0.1,1)
        Rectangle:
            size: self.size
            pos: self.pos

        Color:
            rgba:(0.9,0.9,1,1)

        Rectangle:
            size: (self.cursor_diff, self.cursor_diff)
            pos: (self.center_x-(self.cursor_diff/2), self.cursor_center-(self.cursor_diff/2))
        
    TargetList:
        id: targets_id

        canvas:
            Color:
                rgba:(0,0,0.1,0)
            Rectangle:
                size: self.size
                pos: self.pos

        SOSTarget:
            active: True

    P1Cursor:
        id: p1_cursor_id
        lockin_time: 0
        initial: ( 540, 540, 0, 0, 0, 0)
        dynamics_ct:
            #    c   x   y  dx  dy ddx ddy
            [[   0,  1,  0,  0,  0,  0,  0], #x
            [    540-100,  0,  0,  0,  0,  0,  0], #y
            [    0,  0,  0,  0,  0,  0,  0], #dx
            [    0,  0,  0,  0,  0,  0,  0], #dy
            [    0,  0,  0,  0,  0,  0,  0], #ddx
            [    0,  0,  0,  0,  0,  0,  0]] #ddy
        dynamics_td:
            #    c   x   y  dx  dy ddx ddy
            [[   0,  0,  0,  0,  0,  0,  0], #x
            [    0,  0,  0,  0,  0,  0,  0], #y
            [    0,  0,  0,  0,  0,  0,  0], #dx
            [    0,  0,  0,  0,  0,  0,  0], #dy
            [    0,  0,  0,  0,  0,  0,  0], #ddx
            [    0,  0,  0,  0,  0,  0,  0]] #ddy

    P2Cursor:
        id: p2_cursor_id
        lockin_time: 0
        initial: ( 540, 540, 0, 0, 0, 0)
        dynamics_ct:
            #    c   x   y  dx  dy ddx ddy
            [[   0,  1,  0,  0,  0,  0,  0], #x
            [    540+100,  0,  0,  0,  0,  0,  0], #y
            [    0,  0,  0,  0,  0,  0,  0], #dx
            [    0,  0,  0,  0,  0,  0,  0], #dy
            [    0,  0,  0,  0,  0,  0,  0], #ddx
            [    0,  0,  0,  0,  0,  0,  0]] #ddy
        dynamics_td:
            #    c   x   y  dx  dy ddx ddy
            [[   0,  0,  0,  0,  0,  0,  0], #x
            [    0,  0,  0,  0,  0,  0,  0], #y
            [    0,  0,  0,  0,  0,  0,  0], #dx
            [    0,  0,  0,  0,  0,  0,  0], #dy
            [    0,  0,  0,  0,  0,  0,  0], #ddx
            [    0,  0,  0,  0,  0,  0,  0]] #ddy



<TextScreen>:
    Label:
        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
        text: self.parent.text

<EggDropProcedure>:
    EggDrop:
        name: "trial0"
        timeout: 0
    TextScreen:
        name: "endscreen"
        text: "Trial Complete. Congratulations."
        timeout: 0
